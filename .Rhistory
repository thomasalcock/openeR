}
doc_skeleton(
"name",
"studd",
"me",
"stiuff"
)
doc_skeleton <- function(project_name, content, contrib, summary){
doc_context <- rstudioapi::getActiveDocumentContext()
position <- doc_context$selection[[1]]$range$start
skeleton <- paste('# ----------------------------------------------------------------------------- #
# Project:', project_name, '\n',
'# Content:', content, '\n',
'# Contributors:', contrib, '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', summary, '\n',
'# ----------------------------------------------------------------------------- #')
rstudioapi::insertText(
location = position,
text = skeleton
)
}
doc_skeleton(
"name",
"studd",
"me",
"stiuff"
)
doc_skeleton(
"name",
"studd",
"me",
"stiuff"
)
# Project: name
# Content: studd
# Contributors: me
# Last update on: 2020-03-17
# Summary: stiuff
# ----------------------------------------------------------------------------- #
rm(list = ls())
library(shiny)
library(miniUI)
library(ggplot2)
doc_skeleton <- function(project_name, content, contrib, summary){
doc_context <- rstudioapi::getActiveDocumentContext()
position <- doc_context$selection[[1]]$range$start
skeleton <- paste('# ----------------------------------------------------------------------------- #
# Project:', project_name, '\n',
'# Content:', content, '\n',
'# Contributors:', contrib, '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', summary, '\n',
'# ----------------------------------------------------------------------------- #')
rstudioapi::insertText(
location = position,
text = skeleton
)
}
openeR_gadget <- function(){
ui <- miniPage(
gadgetTitleBar("Enter document information"),
miniContentPanel(
textInput("project_id", label = "", placeholder = "Enter project name"),
textInput("content", label = "", placeholder = "Enter content"),
textInput("contrib", label = "", placeholder = "Enter contributors"),
textInput("summary", label = "", placeholder = "Enter summary")
)
)
server <- function(input, output, session) {
text_output <- reactive({
doc_skeleton(
project_name = input$project_id,
content = input$content,
contrib = input$contrib,
summary = input$summary
)
})
}
runGadget(
ui,
server,
viewer = dialogViewer("Enter Script Documentation")
)
}
doc_skeleton(
"name",
"studd",
"me",
"stiuff"
)
openeR_gadget <- function(){
ui <- miniPage(
gadgetTitleBar("Enter document information"),
miniContentPanel(
textInput("project_id", label = "", placeholder = "Enter project name"),
textInput("content", label = "", placeholder = "Enter content"),
textInput("contrib", label = "", placeholder = "Enter contributors"),
textInput("summary", label = "", placeholder = "Enter summary")
)
)
server <- function(input, output, session) {
reactive({
doc_skeleton(
project_name = input$project_id,
content = input$content,
contrib = input$contrib,
summary = input$summary
)
})
}
runGadget(
ui,
server,
viewer = dialogViewer("Enter Script Documentation")
)
}
text_printer()
openeR_gadget()
openeR_gadget <- function(){
ui <- miniPage(
gadgetTitleBar("Enter document information"),
miniContentPanel(
textInput("project_id", label = "", placeholder = "Enter project name"),
textInput("content", label = "", placeholder = "Enter content"),
textInput("contrib", label = "", placeholder = "Enter contributors"),
textInput("summary", label = "", placeholder = "Enter summary")
)
)
server <- function(input, output, session) {
observeEvent(input$done, {
doc_skeleton(
project_name = input$project_id,
content = input$content,
contrib = input$contrib,
summary = input$summary
)
})
}
runGadget(
ui,
server,
viewer = dialogViewer("Enter Script Documentation")
)
}
openeR_gadget()
openeR_gadget <- function(){
ui <- miniPage(
gadgetTitleBar("Enter document information"),
miniContentPanel(
textInput("project_id", label = "", placeholder = "Enter project name"),
textInput("content", label = "", placeholder = "Enter content"),
textInput("contrib", label = "", placeholder = "Enter contributors"),
textInput("summary", label = "", placeholder = "Enter summary")
)
)
server <- function(input, output, session) {
observeEvent(input$done, {
stopApp(
doc_skeleton(
project_name = input$project_id,
content = input$content,
contrib = input$contrib,
summary = input$summary
)
)
})
}
runGadget(
ui,
server,
viewer = dialogViewer("Enter Script Documentation")
)
}
openeR_gadget()
?openeR::openeR
?runGadget
?dialogViewer
usethis::use_package("shiny")
usethis::use_package("miniUI")
devtools::document()
?openeR::doc_skeleton
?openeR::openeR_gadget()
devtools::document()
?openeR::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
?runGadget
Sys.getenv()
Sys.setenv("GCS_AUTH_FILE" = "")
Sys.getenv()
Sys.setenv("GITHUB_PAT") = ""
Sys.setenv("GITHUB_PAT" = "")
Sys.getenv()
?devtools::install_github
openeR:::openeR_gadget()
openeR:::openeR_gadget()
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
# ----------------------------------------------------------------------------- #
# Project: test
# Content: test
# Contributors: tets
# Last update on: 2020-03-18
# Summary: test
# ----------------------------------------------------------------------------- #
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
#'
#' @examples
#' \dontrun{
#' doc_skeleton(
#' project_name = "My Project",
#' content = "Data preparation",
#' contrib = "John Smith",
#' summary = "This script prepares the data for modeling"
#' )
#' }
doc_skeleton <- function(project_name, content, contrib, summary){
browser()
doc_context <- rstudioapi::getActiveDocumentContext()
position <- doc_context$selection[[1]]$range$start
skeleton <- paste('# ----------------------------------------------------------------------------- # \n # Project:', project_name, '\n',
'# Content:', content, '\n',
'# Contributors:', contrib, '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', summary, '\n',
'# ----------------------------------------------------------------------------- #')
rstudioapi::insertText(
location = position,
text = skeleton
)
}
doc_skeleton(rep("w", 4))
doc_skeleton(project_name = "w", content = "w", contrib = "w", summary = "w")
skeleton
cat(skeleton)
skeleton <- paste('# ----------------------------------------------------------------------------- # \n',
'# Project:', project_name, '\n',
'# Content:', content, '\n',
'# Contributors:', contrib, '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', summary, '\n',
'# ----------------------------------------------------------------------------- #')
skeleton <- paste('# ----------------------------------------------------------------------------- # \n',
'# Project:', "project_name", '\n',
'# Content:', "content", '\n',
'# Contributors:', "contrib", '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', "summary", '\n',
'# ----------------------------------------------------------------------------- #')
skeleton
cat(skeleton)
skeleton <- paste('# ----------------------------------------------------------------------------- #\n',
'# Project:', "project_name", '\n',
'# Content:', "content", '\n',
'# Contributors:', "contrib", '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', "summary", '\n',
'# ----------------------------------------------------------------------------- #')
cat(skeleton)
skeleton <- paste(' # ----------------------------------------------------------------------------- #\n',
'# Project:', "project_name", '\n',
'# Content:', "content", '\n',
'# Contributors:', "contrib", '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', "summary", '\n',
'# ----------------------------------------------------------------------------- #')
cat(skeleton)
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
skeleton <- paste(' # ----------------------------------------------------------------------------- #\n',
'# Project:', "project_name",
'# Content:', "content",
'# Contributors:', "contrib",
'# Last update on:', Sys.Date(),
'# Summary:', "summary",
'# ----------------------------------------------------------------------------- #')
cat(skeleton)
skeleton
skeleton <- paste(' # ----------------------------------------------------------------------------- #\n',
'# Project:', "project_name", '\n',
'# Content:', "content", '\n',
'# Contributors:', "contrib", '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', "summary", '\n',
'# ----------------------------------------------------------------------------- #')
cat(skeleton)
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
?runGadget
shiny::runExample()
shiny::runExample("01_hello")
shinyOptions(shiny.trace = TRUE)
shiny::runExample("01_hello")
shinyOptions(shiny.trace = FALSE)
shiny::runExample("01_hello")
message("test")
?system
?gadgetTitleBar
?actionButton
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
shiny::runApp()
openeR:::openeR_gadget()
openeR:::openeR_gadget()
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
nchar("-------------------------------------------------------------------------")
nchar("-----------------------------------------------------------------------")
rep("-", 4)
paste0(rep("-", 4))
paste0(rep("-", 4), collapse = "")
paste0(rep("-", 73 - nchar("x")), collapse = "")
create_section <- function(sec_name){
paste0(rep("-", 73 - nchar(sec_name)), collapse = "")
}
create_section("test")
create_section <- function(sec_name){
title <- paste("#", sec_name)
hyphens <- paste0(rep("-", 73 - nchar(sec_name)), collapse = "")
paste0(title, hyphens)
}
create_section("test")
create_section <- function(sec_name){
title <- paste("#", sec_name)
hyphens <- paste0(rep("-", 73 - nchar(sec_name)), collapse = "")
paste(title, hyphens)
}
create_section("test")
create_section("testing the function")
create_section("testing the function to see how many hyphens remain")
devtools::document()
?create_section
devtools::document()
?create_section
usethis::use_namespace()
?create_section
?miniTabPanel
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
devtools::document()
usethis::use_namespace()
devtools::document()
roxygen2::roxygenise()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
library(openeR)
?openeR_gadget
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
openeR:::openeR_gadget()
?shiny::uiOutput
?miniTabPanel
?tagList
?shiny::textInput
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
?textAreaInput
?textInput
?stopApp
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR_gadget()
openeR:::openeR_gadget()
library(openeR)
rm(list = ls())
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
openeR:::openeR_gadget()
content
project_name
paste(' # ----------------------------------------------------------------------------- # \n # Project:', project_name, '\n',
'# Content:', content, '\n',
'# Contributors:', contrib, '\n',
'# Last update on:', Sys.Date(), '\n',
'# Summary:', summary, '\n',
'# ----------------------------------------------------------------------------- #',
)
content
contrib
openeR:::openeR_gadget()
library(openeR)
library(openeR)
library(openeR)
openeR:::openeR_gadget()
paste("#", sec_name)
nchar(sec_name)
73 - nchar(sec_name)
rep("-", 73 - nchar(sec_name))
paste0(rep("-", 73 - nchar(sec_name)), collapse = "")
library(openeR)
openeR:::openeR_gadget()
?rep
library(openeR)
openeR:::openeR_gadget()
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
?openeR::create_section
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
rep("-", 7)
rep("-", -7)
devtools::document()
devtools::check()
devtools::build()
install.packages("/Users/thomasalcock/Projekte/openeR_0.1.0.tar.gz", repos = NULL)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
openeR:::openeR_gadget()
skeleton
cat(skeleton)
paste(skeleton, '\n', create_section(sec_name = section_header))
paste(title, hyphens)
cat(skeleton)
library(openeR)
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
source('~/Projekte/openeR/R/doc_skeleton.R')
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
?rep
rep_len("-", 10)
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
library(openeR)
openeR:::openeR_gadget()
